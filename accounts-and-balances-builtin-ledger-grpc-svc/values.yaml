# Default values for accounts-and-balances-builtin-ledger-grpc-svc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: mojaloop/accounts-and-balances-bc-builtin-ledger-grpc-svc
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart version.
  tag: "0.2.5"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 3350

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  tcpSocket:
    port: 3350
  initialDelaySeconds: 5
  periodSeconds: 10
readinessProbe:
  tcpSocket:
    port: 3350
  initialDelaySeconds: 5
  periodSeconds: 10

env:
  kafka_url: kafka:9092
  kafka_logs_topic: logs
  kafka_audits_topic: audits
  mongo_url: mongodb://root:mongodb@mongodb:27017
  platform_config_base_svc_url: http://platform-configuration-svc:3100
  auth_z_svc_baseurl: http://authorization-svc:3202
  auth_n_svc_baseurl: http://authentication-svc:3201
  auth_n_token_issuer_name: mojaloop.vnext.dev.default_issuer
  auth_n_token_audience: mojaloop.vnext.dev.default_audience
  participants_svc_url: http://participants-svc:3010
  redis_host: redis-master
  redis_port: 6379



extraEnvs: {}
# - name: KAFKA_URL
#   value: kafka:9092
# - name: KAFKA_LOGS_TOPIC
#   value: logs
# - name: KAFKA_AUDITS_TOPIC
#   value: audits
# - name: MONGO_URL
#   value: mongodb://root:mongodb@mongodb:27017
# - name: PLATFORM_CONFIG_BASE_SVC_URL
#   value: http://platform-configuration-svc:3100
# - name: ELASTICSEARCH_URL
#   value: http://elasticsearch.monitoring.svc.cluster.local:9200
# - name: AUTH_Z_SVC_BASEURL
#   value: http://authorization-svc:3202
# - name: AUTH_N_SVC_BASEURL
#   value: http://authentication-svc:3201
# - name: AUTH_N_TOKEN_ISSUER_NAME
#   value: mojaloop.vnext.dev.default_issuer
# - name: AUTH_N_TOKEN_AUDIENCE
#   value: mojaloop.vnext.dev.default_audience
# - name: TIGERBEETLE_CLUSTER_ID
#   value: "0"
# - name: TIGERBEETLE_CLUSTER_REPLICA_ADDRESSES
#   value: tigerbeetle:3000
# - name: REDIS_HOST
#   value: redis-master
# - name: REDIS_PORT
#   value: "6379"


initContainers: |
  - name: wait-for-mongodb
    image: bitnami/mongodb:6.0.1
    imagePullPolicy: IfNotPresent
    command:
      - sh
      - -c
      - |
        until mongosh ${MONGO_URL} --eval "disableTelemetry();db.adminCommand('ping')" ;
        do
          echo --------------------;
          echo Waiting for MongoDB...;
          sleep 2;
        done;
        echo ====================;
        echo MongoDB ok!;
    env:
      - name: MONGO_URL
        value: mongodb://root:mongodb@mongodb:27017

  - name: wait-for-platform-configuration-svc
    image: curlimages/curl:8.3.0
    imagePullPolicy: IfNotPresent
    command:
      - sh
      - -c
      - |
        until curl -s ${PLATFORM_CONFIG_BASE_SVC_URL};
        do
          echo --------------------;
          echo Waiting for platform-configuration-svc...;
          sleep 2;
        done;
        echo ====================;
        echo platform-configuration-svc ok!;
    env:
      - name: PLATFORM_CONFIG_BASE_SVC_URL
        value: http://platform-configuration-svc:3100


  - name: wait-for-redis
    image: goodsmileduck/redis-cli
    imagePullPolicy: IfNotPresent
    command:
      - sh
      - -c
      - |
        until redis-cli  -h ${REDIS_HOST} -p ${REDIS_PORT};
        do
          echo --------------------;
          echo Waiting for redis-service...;
          sleep 2;
        done;
        echo ====================;
        echo redis-service ok!;

    env:
      - name: REDIS_HOST
        value: redis-master
      - name: REDIS_PORT
        value: "6379"
